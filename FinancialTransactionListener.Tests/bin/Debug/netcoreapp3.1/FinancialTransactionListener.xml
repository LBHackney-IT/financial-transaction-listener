<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FinancialTransactionListener</name>
    </assembly>
    <members>
        <member name="T:FinancialTransactionListener.BaseFunction">
            <summary>
            Base class used for all functions
            Sets up the necessary DI container for the function.
            Any function-specific registration and configuration should be done in the derived class.
            </summary>
        </member>
        <member name="M:FinancialTransactionListener.BaseFunction.Configure(Microsoft.Extensions.Configuration.IConfigurationBuilder)">
            <summary>
            Base implementation
            Automatically adds environment variables and the appsettings file
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:FinancialTransactionListener.BaseFunction.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>>
            Base implementation
            Automatically adds LogCallAspect
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:FinancialTransactionListener.Boundary.EntityEventSns">
            <summary>
            TODO
            Suggested model of the event message received by the function
            This will of course be dependent on the specific message expected.
            </summary>
        </member>
        <member name="M:FinancialTransactionListener.Infrastructure.RetryService.DoAsync``1(System.Threading.Tasks.Task{``0},System.Int32,System.TimeSpan)">
            <summary>
            Async performing repetitive logic
            </summary>
            <typeparam name="T"></typeparam>
            <param name="action">Task object</param>
            <param name="maxAttemptCount">Count of attempts</param>
            <param name="delay">Delay between several attempts</param>
        </member>
        <member name="T:FinancialTransactionListener.SqsFunction">
            <summary>
            Lambda function triggered by an SQS message
            </summary>
        </member>
        <member name="M:FinancialTransactionListener.SqsFunction.#ctor">
            <summary>
            Default constructor. This constructor is used by Lambda to construct the instance. When invoked in a Lambda environment
            the AWS credentials will come from the IAM role associated with the function and the AWS region will be set to the
            region the Lambda function is executed in.
            </summary>
        </member>
        <member name="M:FinancialTransactionListener.SqsFunction.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Use this method to perform any DI configuration required
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:FinancialTransactionListener.SqsFunction.FunctionHandler(Amazon.Lambda.SQSEvents.SQSEvent,Amazon.Lambda.Core.ILambdaContext)">
            <summary>
            This method is called for every Lambda invocation. This method takes in an SQS event object and can be used 
            to respond to SQS messages.
            </summary>
            <param name="evnt"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:FinancialTransactionListener.SqsFunction.ProcessMessageAsync(Amazon.Lambda.SQSEvents.SQSEvent.SQSMessage,Amazon.Lambda.Core.ILambdaContext)">
            <summary>
            Method called to process every distinct message received.
            </summary>
            <param name="message"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
    </members>
</doc>
